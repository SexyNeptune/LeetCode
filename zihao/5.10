## 70.爬楼梯    
class Solution {
    public int climbStairs(int n) {
        if(n<=2) return n;
        int a = 1, b=2;
        for(int i = 2 ; i < n ; i++){
            b=a+b;
            a=b-a;
        }
        return b;
    }
}

## 8.字符串转整数(atoi) 
class Solution {
    public int myAtoi(String str) {
        str = str.trim();
        if (str == null || str.length() == 0)
            return 0;

        char firstChar = str.charAt(0);
        int sign = 1;  //符号
        int start = 0;  //游标
        long res = 0; 
        if (firstChar == '+') {
            sign = 1;
            start++;
        } else if (firstChar == '-') {
            sign = -1;
            start++;
        }

        for (int i = start; i < str.length(); i++) {
            if (!Character.isDigit(str.charAt(i))) {
                return (int) res * sign;
            }
            //进行升位运算
            res = res * 10 + str.charAt(i) - '0';
            if (sign == 1 && res > Integer.MAX_VALUE)
                return Integer.MAX_VALUE;
            if (sign == -1 && res > Integer.MAX_VALUE)
                return Integer.MIN_VALUE;
        }
        return (int) res * sign;

    }
}

